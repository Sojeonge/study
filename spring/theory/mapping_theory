* 다대일 단/양방향 매핑
=> FK 가지고 있는 곳을 주인으로 정하고, 주인이 아닌 쪽은 내가 이미 매핑이 되어버렸다는 것을 나타내기 위해서 ‘mappedBy’ 속성을 사용하고 조회만 가능!

@ManyToOne(N:1) -> owner 

*속성
1. Optional : 연관되어 있지 않은 쪽 (true), 연관되어 있는 쪽 (false) -> false로 설정하면 연관된 엔티티가 반드시 있어야함! (기본값 = true)
2. Fetch : LAZY 설정은 연관 엔티티를 실제 사용할때 조회, EAGER는 연관 엔티티를 동시에 조회
(기본값 -> @OneToMany: LAZY, @ManyToOne:EAGER)
3. cascade : 연관 엔티티 관리(저장/삭제)를 함께할 때 사용

다대일 - @ManyToOne-> 많아도 1개 -> Eager(즉시로딩)
일대다 - @OneToMany -> Lazy(지연로딩)
일대일 - @OneToOne -> Eager
다대다 - @ManyToMany -> Lazy

* 엔티티 생명주기
1. 비영속(New/Transient)
: 엔티티 객체를 생성했지만 아직 영속성 컨텍스트에 저장하지 않은 상태
2. 영속(Managed)
: 엔티티 매니저를 통해 엔티티를 영속성 컨텍스트에 저장한 상태, 관리되는 상태
3. 준영속(Detached)
: 영속성 컨텍스트가 관리하던 영속 상태의 엔티티를 더 이상 관리하지 않을 때의 상태, 기능이 동작하지 않는 상태
4. 삭제(Removed)
: 엔티티가 영속성 컨텍스트와 데이터베이스에서 삭제된 상태




