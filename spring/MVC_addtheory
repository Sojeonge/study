MVC 아키텍처는 소프트웨어를 개발할 때 널리 사용되는 설계 패턴 중 하나입니다. 
이 아키텍처는 애플리케이션을 세 가지 주요 부분으로 분할합니다.

1.모델(Model): 데이터와 비즈니스 로직을 나타냅니다. 데이터베이스의 엔티티나 데이터를 포함하고, 
데이터를 처리하는데 필요한 메서드나 동작을 정의합니다.

2.뷰(View): 사용자에게 데이터를 보여주는 부분입니다. HTML 페이지, 화면 요소, 레이아웃 등을 포함합니다. 사용자 인터페이스와 관련된 로직이나 데이터 처리를 하지 않습니다. 단순히 데이터를 표시하는 역할만 수행합니다.

3.컨트롤러(Controller): 사용자의 요청을 받고, 해당 요청에 대한 처리를 담당합니다. 
컨트롤러는 클라이언트로부터의 요청을 받으면 그에 따라 적절한 서비스를 호출하고, 그 결과를 뷰에 전달하여 
사용자에게 응답합니다.

여기서 서비스(Service)는 비즈니스 로직을 처리하고, 컨트롤러(Controller)와 데이터베이스 간의 
중개자 역할을 수행합니다. 서비스는 일반적으로 하나 이상의 리포지토리(데이터 액세스 계층)를 사용하여 
데이터를 조작하고 가져옵니다.

따라서 데이터의 흐름은 다음과 같이 이루어집니다:

1. 클라이언트의 요청은 컨트롤러(Controller)로 전달됩니다.
2. 컨트롤러는 요청을 처리하기 위해 적절한 서비스(Service) 메서드를 호출합니다.
3. 서비스(Service)는 비즈니스 로직을 수행하고, 필요에 따라 하나 이상의 리포지토리(Repository)를 
사용하여 데이터베이스와 상호작용합니다.
4. 데이터베이스에서 가져온 데이터는 서비스에서 가공되고, 컨트롤러로 다시 반환됩니다.
5. 컨트롤러는 최종적으로 뷰(View)를 선택하여 사용자에게 데이터를 표시합니다.

이러한 방식으로 애플리케이션을 구성하면 각 구성 요소가 독립적으로 관리되어 코드의 재사용성과 
유지보수성이 향상됩니다.
